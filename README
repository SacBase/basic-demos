/*****************************************************************************
 * 
 * file:   README
 *
 * description:
 *
 *   This file is to give an overview of the SAC demo programs that come
 *   with the SAC distribution.
 *   
 *   The directory comes with a Makefile that genericly forces the creation
 *   of all demo programs by calling make recursively in all of it's 
 *   sub directories.
 *   
 *   In the sequel, a coarse classification of the existing demos is given
 *   which coincides with the directory structure chosen. More detailed
 *   descriptions of particular demo programs can be found in the README
 *   files of the sub directories themselves.
 *   
 *****************************************************************************/


1) simple

This directory contains very simple examples such as gcd only. It is primarily
usefull for the entirely novice user.


2) tutorials

The demo programs of this directory are less ment for studying the program codes
themselves but for running the compiled applications and inspecting the output
generated. Due to their basic nature, they are a good starting point when
being familiar with C and trying to get used to the peculiarities of SAC.


3) states

Here you will find some examples for demonstrating how to create your own 
state-full data structures in SAC. Since the documentation on states and
state-modifications in SAC is not too extensive this might be a good
source for getting started with states in SAC.


4) numerical

Several benchmarks from numerical computing can be found in this directory.
In most cases, the SAC programs contain several alternative implementations
between which can be chosen by means of compiler flags.


5) c_from_sac

The programs in this directory demonstrate how C-libraries can be used from
SAC programs. However, besides the examples found in this directory there
are several further examples hidden in the standard library.

6) sac_from_c

sac_from_c contains several examples for how to export the various features 
of SAC to the C world. Probably, this is the most interesting part of the demos
if you intend to replace part of an existing C/C++/Fortran program by a
SAC implementation.



