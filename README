/*****************************************************************************
 * 
 * file:   README
 *
 * description:
 *
 *   This file is to give an overview of the SAC demo programs that come
 *   with the SAC distribution.
 *   
 *   
 *   
 *****************************************************************************/



SAC demo modules and classes:
=============================


1) IntStack.dec / IntStack.sac

The SAC class IntStack demonstrates the basic concepts of how states and
state modifications are integrated into the functional framework of SAC.
An integer stack is implemented as an example data structure. Besides the
appropriate abstract data type, a set of common access and manipulation
functions is provided. Using the notion of global objects in SAC, also,
a predefined global stack is incorporated.

Apart from the state specific stuff, this class is also a useful introduction
to the declaration and implementation of modules in SAC since classes are
special kinds of modules.




SAC demo programs:
==================


1) arrays.sac

This SAC demo program prints an introduction to the SAC array concept.
Basic issues like the SAC specific representation of arrays are covered
as well as the basic operations on arrays. Moreover, the functionality of
some high-level array operations that used to be primitive in former versions
of SAC, but are now provided by the module 'Array' from the SAC standard 
library, is explained by means of examples.


2) withloop.sac

This SAC demo program prints an introduction to the SAC specific array
construct with-loop. However, only a subset of the complete functionality
of today's with-loops is covered by this demo program.


3) use_CommandLine.sac

This SAC demo program prints a reference guide to the module 'CommandLine'
from the SAC standard library. This module provides access to the command
line arguments of a SAC application program.


4) use_String.sac

This SAC demo program prints a reference guide to the module 'String' from
he SAC standard library. This module provides strings as an abstract data type
along with a large set of operations on strings.


5) use_IntStack.sac

This SAC demo program demonstrates the usage of the demo class IntStack
(see above). Some comprehensive stack operations are defined based on the
stack primitives provided by the class IntStack. These are applied to various
example stacks and the respective rsults are printed.


6) relax.sac

This SAC demo program implements 2-dimensional relaxation with a 4-point
stencil and fixed boundary conditions. This is a typical example of a 
program used for benchmarking.






