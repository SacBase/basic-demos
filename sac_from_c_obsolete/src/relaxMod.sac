module relaxMod;

use Array: all;
export { relax};

specialize double[+] relax( double[10,10] A, int steps);
specialize double[+] relax( double[90,90] A, int steps);
specialize double[+] relax( double[400,400] A, int steps);
specialize double[+] relax( double[1000,1000] A, int steps);

/*****************************************************************************
 * 
 * based on demo-file:   relax_fix.sac
 *   
 *   This SAC module implements 2-dimensional relaxation on double
 *   precision floating point numbers applying a 4-point stencil and fixed
 *   boundary conditions.
 *
 *****************************************************************************/

inline double[+] onestep(double[.,.] B) 
{ 
  A = with {
        ( . < x < . ) : 0.25*(B[x+[1,0]]
                              + B[x-[1,0]]
                              + B[x+[0,1]]
                              + B[x-[0,1]]);
      } : modarray( B );

  return(A);
}

inline double[+] relax(double[+] A, int steps)
{
  for (k=0; k<steps; k++) {
    A = onestep(A);
  }
  
  return(A);
}



