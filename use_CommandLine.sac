/*
 *  Program for demonstrating the features of the standard class CommandLine
 */



import CommandLine: all;

import String:
{
  implicit types: string;
  functions: to_string;
}

import TermFile:
{
  implicit types: TermFile;
  global objects: stdout;
  functions: printf;
}

import Terminal: all;


int main()
{
  printf("\n\nDemo Program for the standard module CommandLine\n");
  printf("================================================\n");
  
  printf("\n\nYou should start this program repeatedly with different\n");
  printf("command line options to see how to use this standard module\n");
  printf("CommandLine.\n\n\n");

  printf("The following functions are provided:\n\n");
  printf("  int    argc()\n");
  printf("  string argv()\n");
  printf("  string argv(int n)\n");

  printf("\n\nThe function argc() tells you the number of command line\n");
  printf("parameters the program was started with.\n");
  printf("Example: This program was started with %d arguments.\n\n", argc());

  printf("The function argv() returns the entire command line that started\n");
  printf("the program.\n");
  printf("Example: This program was started with the command line\n");
  printf("         \"%s\"\n\n\n", argv());

  printf("At last, the function argv(n) grants access to the n-th command\n");
  printf("line argument.\n");
  printf("Example: This program was started with the command line arguments:\n");
  for (i=0; i<argc(); i++)
  {
    printf("         %d: \"%s\"\n", i, argv(i));
  }

  printf("\n\n");

  return(0);
}
